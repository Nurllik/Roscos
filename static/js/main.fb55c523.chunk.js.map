{"version":3,"sources":["catalog/component/recharts/StackedBarChart.js","catalog/component/recharts/CustomShapeBarChart.js","catalog/component/recharts/PieChartW.js","catalog/layout/index.js","App.js","serviceWorker.js","index.js"],"names":["StackedBarChart","props","state","countOfYear","yearOfBegin","dataArray","count","this","launches","length","Number","moment","date","format","flag","success","fail","result","push","name","className","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","stackId","fill","PureComponent","jsfiddleUrl","colors","scaleOrdinal","schemeCategory10","range","getPath","x","y","TriangleBar","d","stroke","CustomShapeBarChart","changeData","e","setState","target","value","console","log","data1","female","data2","data3","shape","label","position","map","entry","index","key","classname","Group","onChange","Pads","1","2","3","4","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","dy","r","toFixed","Example","activeIndex","onPieEnter","countPads","dataPads","launch_pad","id","activeShape","onMouseEnter","Header","Layout","Content","Footer","LayoutMain","url","fetch","then","res","json","fetchlaunches","theme","mode","defaultSelectedKeys","Item","style","textAlign","display","alignItems","justifyContent","minHeight","LoadingOutlined","fontSize","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fb55c523.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport moment from 'moment'\nconst data = [\n  {\n    name: '2014', Неудачный: 4, Успешный: 153,\n  },\n  {\n    name: '2015', Неудачный: 3, Успешный: 168,\n  },\n  {\n    name: '2016', Неудачный: 2, Успешный: 175,\n  },\n  {\n    name: '2017', Неудачный: 2, Успешный: 163,\n  },\n  {\n    name: '2018', Неудачный: 1, Успешный: 178,\n  },\n  {\n    name: '2019', Неудачный: 2, Успешный: 189,\n  },\n  {\n    name: '2020', Неудачный: 3, Успешный: 180,\n  },\n];\nexport default class StackedBarChart extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // dataArray: []\n    }\n  }\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/90v76x08/';\n\n\n\n\n  render() {\n\n    let countOfYear = 1\n    let yearOfBegin = 2017\n    let dataArray = []\n\n    let count = this.props.launches.length - 1\n\n    while (count > 0) {\n      if (Number(moment(this.props.launches[count].date).format('YYYY')) != Number(moment(this.props.launches[count - 1].date).format('YYYY'))) {\n        countOfYear++\n      }\n      count--\n    }\n\n    while (countOfYear > 0) {\n      let flag = this.props.launches.length - 1\n      let success = 0\n      let fail = 0\n      while (flag >= 0) {\n        if (this.props.launches[flag].result == 'SUCCESS' && Number(moment(this.props.launches[flag].date).format('YYYY')) == yearOfBegin) {\n          success++\n        } else if (this.props.launches[flag].result != 'SUCCESS' && Number(moment(this.props.launches[flag].date).format('YYYY')) == yearOfBegin) {\n          fail++\n        }\n        flag--\n      }\n\n      dataArray.push({ name: yearOfBegin, 'успешно': success, 'Не успешно': fail })\n      yearOfBegin++\n      countOfYear--\n      success = 0\n      fail = 0\n    }\n\n    return (\n      <div className='SBC'>\n        <BarChart\n          width={500}\n          height={300}\n          data={dataArray}\n          margin={{\n            top: 20, right: 30, left: 20, bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"успешно\" stackId=\"a\" fill=\"green\" />\n          <Bar dataKey=\"Не успешно\" stackId=\"a\" fill=\"red\" />\n        </BarChart>\n      </div>\n    );\n  }\n}","import React, { PureComponent } from 'react';\nimport { Button, Radio } from 'antd'\nimport PropTypes from 'prop-types';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport './css/index.css'\n\nconst colors = scaleOrdinal(schemeCategory10).range();\n\n// const data = [\n//   {\n//     name: 'Россия',  female: 24, \n//   },\n//   {\n//     name: 'США',   female: 13, \n//   },\n//   {\n//     name: 'Евросоюз',  female: 9,\n//   },\n//   {\n//     name: 'Индия',  female: 3, \n//   },\n//   {\n//     name: 'Иран',  female: 4, \n//   },\n//   {\n//     name: 'Китай',  female: 3,\n//   },\n//   {\n//     name: 'Япония',  female: 4, \n//   },\n// ];\n\nconst getPath = (x, y, width, height) => `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\n          C${x + width / 2},${y + height / 3} ${x + 2 * width / 3},${y + height} ${x + width}, ${y + height}\n          Z`;\n\nconst TriangleBar = (props) => {\n    const {\n        fill, x, y, width, height,\n    } = props;\n\n    return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\n};\n\nTriangleBar.propTypes = {\n    fill: PropTypes.string,\n    x: PropTypes.number,\n    y: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n};\n\nexport default class CustomShapeBarChart extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data1: [\n                {\n                    name: 'Россия', female: 24,\n                },\n                {\n                    name: 'США', female: 13,\n                },\n                {\n                    name: 'Евросоюз', female: 9,\n                },\n                {\n                    name: 'Индия', female: 3,\n                },\n                {\n                    name: 'Иран', female: 4,\n                },\n                {\n                    name: 'Китай', female: 3,\n                },\n                {\n                    name: 'Япония', female: 4,\n                },\n                {\n                    name: 'Великобр', female: 8,\n                },\n                {\n                    name: 'Великобритания', female: 8,\n                },\n                {\n                    name: 'Вdsf', female: 8,\n                },\n                {\n                    name: 'qwww', female: 8,\n                },\n            ],\n            data2: [\n                {\n                    name: 'Россия', female: 240,\n                },\n                {\n                    name: 'США', female: 130,\n                },\n                {\n                    name: 'Евросоюз', female: 90,\n                },\n                {\n                    name: 'Индия', female: 30,\n                },\n                {\n                    name: 'Иран', female: 40,\n                },\n                {\n                    name: 'Китай', female: 30,\n                },\n                {\n                    name: 'Япония', female: 40,\n                },\n            ],\n            data3: [\n                {\n                    name: 'Россия', female: 20,\n                },\n                {\n                    name: 'США', female: 10,\n                },\n                {\n                    name: 'Евросоюз', female: 7,\n                },\n                {\n                    name: 'Индия', female: 5,\n                },\n                {\n                    name: 'Иран', female: 9,\n                },\n                {\n                    name: 'Китай', female: 13,\n                },\n                {\n                    name: 'Япония', female: 5,\n                },\n\n            ],\n            data: [],\n\n\n        }\n        // this.changeData = this.changeData.bind(this)\n    }\n    static jsfiddleUrl = 'https://jsfiddle.net/alidingling/rnywhbu8/';\n    changeData = (e) => {\n        this.setState({ data: e.target.value })\n        console.log(e.target.value);\n\n\n\n    }\n\n    render() {\n\n\n\n        return (\n            <div>\n                <div className='CSBC'> \n                    <BarChart\n                        width={1100}\n                        height={500}\n                        data={this.state.data}\n                        margin={{\n                            top: 20, right: 30, left: 80, bottom: 50,\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Bar dataKey=\"female\" fill=\"#8884d8\" shape={<TriangleBar />} label={{ position: 'top' }}>\n                            {\n                                this.state.data1.map((entry, index) => (\n                                    <Cell key={`cell-${index}`} fill={colors[index % 20]} />\n                                ))\n                            }\n                        </Bar>\n                    </BarChart>\n\n                    <div classname='radioGroupOnCustomBar'>\n                        <Radio.Group onChange={this.changeData}>\n                            <Radio value={this.state.data1}>2020</Radio>\n                            <Radio value={this.state.data2}>2019</Radio>\n                            <Radio value={this.state.data3}>2018</Radio>\n                        </Radio.Group>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector } from 'recharts';\n\nconst data = [\n  { name: 'Байконур', value: 400 },\n  { name: 'Восточный', value: 300 },\n  { name: 'Плецеск', value: 300 },\n  { name: 'ГКЦ (Куру)', value: 200 },\n];\nconst Pads = {\n  1: 'Байконур',\n  2: 'Восточный',\n  3: 'Плесецк',\n  4: 'ГКЦ (Куру)',\n  }\n  \nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, percent, value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`Запуски ${value}`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`( ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/hqnrgxpj/';\n\n  state = {\n    activeIndex: 0,\n  };\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    let countPads = 4\n    let count \n    let dataPads = []\n    while (countPads > 0) {\n      let value = 0\n      count = 0\n\n      while (count < this.props.launches.length) {\n        if (Pads[countPads] == Pads[this.props.launches[count].launch_pad.id]) {\n          value++\n        }\n        count++\n      }\n\n      dataPads.push({\n        name: Pads[countPads],\n        value: value,\n      })\n      countPads--\n    }\n    return (\n      <div className='PCW'>\n        <PieChart width={600} height={600}>\n          <Pie\n            activeIndex={this.state.activeIndex}\n            activeShape={renderActiveShape}\n            data={dataPads}\n            cx={300}\n            cy={300}\n            innerRadius={60}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={this.onPieEnter}\n          />\n        </PieChart>\n      </div>\n    );\n  }\n}\n","import React, { Component, PureComponent } from 'react'\nimport 'antd/dist/antd.css'\nimport './index.css'\nimport { Layout, Menu, Breadcrumb, Button } from 'antd'\nimport StackedBarChart from '../component/recharts/StackedBarChart'\nimport CustomShapeBarChar from '../component/recharts/CustomShapeBarChart'\nimport PieChartW from '../component/recharts/PieChartW'\nimport {\n    LoadingOutlined,\n} from '@ant-design/icons';\nimport moment from 'moment'\n\n\n\n// import Example from '../component/MixBarChart'\n\nconst { Header, Content, Footer } = Layout;\nconst urlForLaunches = 'http://roscosmos.xyz/api/launches/?format=json'\n\nclass LayoutMain extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            launches: null\n        }\n    }\n\n    fetchlaunches(url) {\n        fetch(url)\n            .then(res => res.json())\n            .then(res => this.setState({ launches: res }))\n    }\n    componentDidMount() {\n        this.fetchlaunches(urlForLaunches)\n    }\n\n\n\n    static jsfiddleUrl = 'https://jsfiddle.net/alidingling/90v76x08/';\n\n    render() {\n        const { launches } = this.state\n        if (launches) {\n\n            return (\n                <div>\n\n                    <Layout >\n                        <Header>\n                            <div className=\"logo\" />\n                            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                                <Menu.Item key=\"1\">Привет</Menu.Item>\n                                <Menu.Item key=\"2\">Статистика</Menu.Item>\n                                <Menu.Item key=\"3\">Запуски</Menu.Item>\n                            </Menu>\n                        </Header>\n                        <div>\n\n                        </div>\n                        <Content>\n\n                            <StackedBarChart launches={launches} />\n                            <CustomShapeBarChar />\n                            <PieChartW  launches={launches}/>\n\n                        </Content>\n                        <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n                    </Layout>\n                </div>\n            )\n        } else { return (<div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', minHeight: '100vh' }}>\n        <LoadingOutlined style={{ fontSize: '100px' }} /></div>) }\n\n    }\n}\n\nexport default LayoutMain","import React from 'react'\nimport './App.css'\nimport LayoutMain from './catalog/layout/index'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LayoutMain />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}